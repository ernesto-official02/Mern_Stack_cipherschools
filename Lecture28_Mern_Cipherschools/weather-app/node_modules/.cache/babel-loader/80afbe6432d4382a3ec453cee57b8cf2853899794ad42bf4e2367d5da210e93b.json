{"ast":null,"code":"import Axios from \"axios\";\nconst WEATHER_API_URL = \"https://api.open-meteo.com/v1/forecast\";\nconst convertDate = date => {\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1 <= 9 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\n  const day = date.getDate() <= 9 ? `0${date.getDate()}` : date.getDate();\n  return `${year}-${month}-${day}`;\n};\nconst getWeather = async ({\n  latitude,\n  longitude\n}) => {\n  const currentDate = new Date();\n  const startDate = new Date(currentDate.setDate(currentDate.getDate() + 1));\n  const {\n    data: weatherInfo\n  } = await Axios.get(WEATHER_API_URL, {\n    params: {\n      latitude,\n      longitude,\n      current_weather: true,\n      timezone: \"IST\",\n      daily: [\"temperature_2m_max\", \"temperature_2m_min\", \"weathercode\"],\n      start_date: convertDate(startDate),\n      end_date: convertDate(new Date(startDate.setDate(startDate.getDate() + 7)))\n    }\n  });\n  return weatherInfo;\n};\nexport default getWeather;","map":{"version":3,"names":["Axios","WEATHER_API_URL","convertDate","date","year","getFullYear","month","getMonth","day","getDate","getWeather","latitude","longitude","currentDate","Date","startDate","setDate","data","weatherInfo","get","params","current_weather","timezone","daily","start_date","end_date"],"sources":["C:/Users/DELL/Documents/All_web/Mern_Stack_cipherschools/Lecture28_Mern_Cipherschools/weather-app/src/api/WeatherApi.js"],"sourcesContent":["import  Axios  from \"axios\";\r\n\r\nconst WEATHER_API_URL= \"https://api.open-meteo.com/v1/forecast\"\r\n\r\nconst convertDate = (date)=>{\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth()+1 <=9 ? `0${date.getMonth()+1}` : date.getMonth()+1; \r\n    const day = date.getDate() <=9 ? `0${date.getDate()}` : date.getDate(); \r\n    return `${year}-${month}-${day}`; \r\n}\r\n\r\n\r\nconst getWeather = async ({latitude, longitude}) => {\r\n    const currentDate = new Date();\r\n    const startDate = new Date(currentDate.setDate(currentDate.getDate()+1));\r\n    const {data: weatherInfo} = await Axios.get(WEATHER_API_URL, {\r\n        params: {\r\n            latitude,\r\n            longitude,\r\n            current_weather: true,\r\n            timezone: \"IST\",\r\n            daily: [\"temperature_2m_max\", \"temperature_2m_min\", \"weathercode\"],\r\n            start_date: convertDate(startDate),\r\n            end_date: convertDate(new Date (startDate.setDate(startDate.getDate()+7))),\r\n        }\r\n    })\r\n    return weatherInfo;\r\n}\r\n\r\nexport default getWeather;"],"mappings":"AAAA,OAAQA,KAAK,MAAO,OAAO;AAE3B,MAAMC,eAAe,GAAE,wCAAwC;AAE/D,MAAMC,WAAW,GAAIC,IAAI,IAAG;EACxB,MAAMC,IAAI,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;EAC/B,MAAMC,KAAK,GAAGH,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAC,CAAC,IAAG,CAAC,GAAG,IAAIJ,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAC,CAAC,EAAE,GAAGJ,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAC,CAAC;EACjF,MAAMC,GAAG,GAAGL,IAAI,CAACM,OAAO,CAAC,CAAC,IAAG,CAAC,GAAG,IAAIN,IAAI,CAACM,OAAO,CAAC,CAAC,EAAE,GAAGN,IAAI,CAACM,OAAO,CAAC,CAAC;EACtE,OAAO,GAAGL,IAAI,IAAIE,KAAK,IAAIE,GAAG,EAAE;AACpC,CAAC;AAGD,MAAME,UAAU,GAAG,MAAAA,CAAO;EAACC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAChD,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC9B,MAAMC,SAAS,GAAG,IAAID,IAAI,CAACD,WAAW,CAACG,OAAO,CAACH,WAAW,CAACJ,OAAO,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;EACxE,MAAM;IAACQ,IAAI,EAAEC;EAAW,CAAC,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAClB,eAAe,EAAE;IACzDmB,MAAM,EAAE;MACJT,QAAQ;MACRC,SAAS;MACTS,eAAe,EAAE,IAAI;MACrBC,QAAQ,EAAE,KAAK;MACfC,KAAK,EAAE,CAAC,oBAAoB,EAAE,oBAAoB,EAAE,aAAa,CAAC;MAClEC,UAAU,EAAEtB,WAAW,CAACa,SAAS,CAAC;MAClCU,QAAQ,EAAEvB,WAAW,CAAC,IAAIY,IAAI,CAAEC,SAAS,CAACC,OAAO,CAACD,SAAS,CAACN,OAAO,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;IAC7E;EACJ,CAAC,CAAC;EACF,OAAOS,WAAW;AACtB,CAAC;AAED,eAAeR,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}